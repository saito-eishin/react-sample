{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["createStore","state","action","type","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"0QA0BYA,aATC,WAAwB,IAAvBC,EAAsB,uDAAd,EAAGC,EAAW,uCAClC,OAAQA,EAAOC,MACb,IAAK,MACH,OAAOF,EAAQ,EACjB,QACE,OAAOA,MA2BUG,IAAMC,UAiCJD,IAAMC,UAwDXD,IAAMC,U,IA8CXC,EAhLH,WACT,gBAEI,QACA,SCAQC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCKdQ,IAASC,OAAO,4BAAG,cAAC,EAAD,MAAaC,SAASC,eAAe,SAMxDZ,M","file":"static/js/main.0cdcaf33.chunk.js","sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\n// import React, { Component } from 'react';\nimport React from 'react';\n// import { BrowserRouter, Route, Link } from 'react-router-dom'\nimport { BrowserRouter, Route, Link } from 'react-dom';\nimport { createStore } from 'redux'\n\nconst App = () => {\n  <BrowserRouter>\n    <div>\n      <Route exact path=\"/react-samplex\" component={Home} />\n      <Route path=\"/time\" component={time} />\n    </div>\n  </BrowserRouter>\n}\n\nconst vote = (state = 0, action) => {\n  switch (action.type) {\n    case 'ADD':\n      return state + 1\n    default:\n      return state\n  }\n}\n\nlet store = createStore(vote)\n\nconst Home = () => {\n  // let vote = 3 //投票数\n  // vote++\n  // store.dispatch({ type: 'ADD' })\n  let x = store.getState().toString()\n\n  return (\n    <div>\n      <h1 className=\"container\">臨時サイト</h1>\n      <p className=\"container\">遷移回数：{x}</p>\n      <p><Link to=\"/time\">遷移カウンター</Link></p>\n\n      <buton className=\"container btn btn-default\" ><a href=\"./time\">ABC</a></buton>\n      <buton className=\"container btn btn-default\"><a href=\"https://webrage.jp/\">WRホームページへ</a></buton>\n      <NameForm />\n      <br></br>\n      <FlavorForm />\n    </div>\n  )\n}\n\nclass NameForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: '' };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  handleSubmit(event) {\n    alert(`氏名が送信されました：${this.state.value}`);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          氏名:\n          <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n        </label>\n        <input id=\"input1\" type=\"submit\" value=\"送信\" />\n      </form>\n    );\n  }\n}\n\n\n// \nclass FlavorForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: 'coconut' };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  handleSubmit(event) {\n    alert('好きな果物：' + this.state.value + 'を送信しました');\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Pick your favorite flavor:\n          <select value={this.state.value} onChange={this.handleChange}>\n            <option value=\"apple\">りんご</option>\n            <option value=\"banana\">ばなな</option>\n            <option value=\"orange\">みかん</option>\n            <option value=\"grape\">ぶどう</option>\n          </select>\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\n\n\n\n// 時計サイトのソース\nfunction time() {\n  let x = store.getState().toString();\n  store.dispatch({ type: 'ADD' })\n\n  return (\n    <div className=\"container text-center\">\n      <h1>時計</h1>\n      {/* クリックするたびに現在時刻を表示するコンポーネントを呼び出して表示する */}\n      <Clock />\n      <p>遷移回数：{x}</p>\n      <p><Link to=\"/\">遷移カウンター</Link></p>\n      <buton className=\"container btn btn-default\" ><a href=\"/\">ホームへ</a></buton>\n    </div>\n  )\n}\n\n// クリックするたびに現在時刻を表示するコンポーネントを作成\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.now = new Date();\n    this.state = {\n      time: `${this.now.getHours()}:${this.now.getMinutes()}:${this.now.getSeconds()}`\n    }\n\n    this.refresh = this.refresh.bind(this);\n  }\n\n  // 現在時刻を表示するメソッドを作成\n  refresh() {\n    this.now = new Date();\n    this.setState((state) => ({\n      time: `${this.now.getHours()}:${this.now.getMinutes()}:${this.now.getSeconds()}`\n    })\n    )\n  }\n\n  // 時刻をクリックしたら現在時刻に切り替わる様に表示\n  render() {\n    return <p onClick={this.refresh}>{this.state.time}</p>\n  }\n}\n\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// // <React.StrictMode>\n// <App />,\n// // </React.StrictMode>,\n\n// <P>aaa</P>,\n// document.getElementById('root')\nReactDOM.render(<p><App /></p>, document.getElementById('root'));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}